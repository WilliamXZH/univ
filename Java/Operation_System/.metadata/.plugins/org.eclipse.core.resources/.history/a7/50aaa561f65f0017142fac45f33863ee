package pers.william.main;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

public class MainThread {

	private static Integer port = 9999;
	private static Integer nThread = 10;
	private static String mode = "fcfs";
	private static String host = "";
	private ServerSocket serverSocket = null;
	private ThreadPoolExecutor threadPoolExecutor = null;
	
	private static String tmplate = "./webserver PORT NTHREADS MODE ";
	
	
	public void init() throws IOException{
		
		serverSocket = new ServerSocket(port);
		threadPoolExecutor = new ThreadPoolExecutor(3, 15, 3, 
				TimeUnit.SECONDS,new ArrayBlockingQueue<Runnable>(10) );
	}
	
	public static void main(String [] args) throws IOException{
		
		Scanner scanner = new Scanner(System.in);
		System.out.println(tmplate);
//		host = scanner.next();
//		port = scanner.nextInt();
//		nThread = scanner.nextInt();
//		mode = scanner.next().toLowerCase();
		
		MainThread mainThread = new  MainThread();
		mainThread.init();
		
		
		System.out.println(host + "\t" + port + "\t" + nThread +"\t" + mode);
		
		
		while(true){
			Socket socket = mainThread.serverSocket.accept();
			mainThread.threadPoolExecutor.execute(new MyThread(socket));
			
			 System.out.println("线程池中线程数目："+mainThread.threadPoolExecutor.getPoolSize()+"，队列中等待执行的任务数目："+
		             mainThread.threadPoolExecutor.getQueue().size()
		             +"，已执行玩别的任务数目："+mainThread.threadPoolExecutor.getCompletedTaskCount());
			
		}
	}
}
