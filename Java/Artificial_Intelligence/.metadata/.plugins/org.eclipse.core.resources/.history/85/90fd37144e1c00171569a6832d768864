package pers.william.MCB;

import java.util.Scanner;

public class FirstTest {
	
	boolean flag = true;
	String info = "";
	
	
	public static void main(String[] args){
		Scanner scan = new Scanner(System.in);
		System.out.println("enter the number of N and k:\n");
		
		int n,k;
		n = scan.nextInt();
		k = scan.nextInt();
		
		
		System.out.println(n + " missionaries and cannibals.\n"
				+ k +" maxsum on board.\n");
		FirstTest ft = new FirstTest();
		
		ft.DFS(n, n, n, k, true, true);
	}
	
	private boolean DFS(int liv_m, int liv_c, 
			int giv_n, int giv_k, boolean locationOfBoard, boolean flag){
		if(liv_m==0 && liv_c==0)return true;
		
		if(liv_m!=0 && liv_m != liv_c)return false;
		
		if(locationOfBoard){
			for(int i=0; i<=giv_k && i<=liv_m; i++){
				for(int j=0; j<=giv_k-i && j<=liv_c && j<=i; j++){
					if(i+j!=0 && DFS(liv_m-i, liv_c-j, giv_n, giv_k, false, false)){
						info = i +" misssionaries and " + j 
								+" cannibals go to the other side of the river.\n" + info;
					}
					if(flag){
						System.out.println(info + "\n\n");
					}
				}
			}
		}else{
			for(int i=0; i<=giv_k && i<=giv_n-liv_m; i++){
				for(int j=0; j<=giv_k-i && j<=giv_n-liv_c && j<=i; j++){
					if(i+j!=0 && DFS(liv_m+i, liv_c+j, giv_n, giv_k, true, false)){
						info = i +" misssionaries and " + j 
								+" cannibals back from the other side of the river.\n" + info;
					}
				}
			}
		}
		
		
		return false;
	}
}
